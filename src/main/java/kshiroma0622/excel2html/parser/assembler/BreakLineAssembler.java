package kshiroma0622.excel2html.parser.assembler;import kshiroma0622.excel2html.fragment.IUIFragment;import kshiroma0622.excel2html.tokenize.Border;import kshiroma0622.excel2html.tokenize.IToken;import kshiroma0622.excel2html.tokenize.ITokenMatrix;import kshiroma0622.excel2html.tokenize.TokenizeUtil;import org.apache.commons.lang.StringUtils;public class BreakLineAssembler extends AbstractAssembler {    public IUIFragment assemble(ITokenMatrix matrix) {        Literal fragment = new Literal(matrix);        fragment.setText("<br />");        return fragment;    }    public ITokenMatrix findFirstFragment(ITokenMatrix matrix) {        // 左右に線がないことと、中身が空白であること        int beginRow = 0;        int endRow = matrix.getLastRowIndex();        int beginCol = 0;        int endCol = matrix.getLastColIndex();        // for (int row = beginRow; row <= endRow; row++) {        int row = 0;        IToken[] tokens = matrix.getRow(row);        boolean chigau = false;        for (int i = 0; i < tokens.length; i++) {// 最初と最後は無視する            if (i == 0 || i == tokens.length - 1) {                continue;            }            IToken token = tokens[i];            Border left = token.getLeftBorder();            if (TokenizeUtil.isValidBorder(left)) {// 有効                chigau = true;                break;            }            Border right = token.getRightBorder();            if (TokenizeUtil.isValidBorder(right)) {                chigau = true;                break;            }            String text = token.getInnerText();            if (!StringUtils.isEmpty(text)) {                chigau = true;                break;            }        }        if (chigau) {            return null;        }        return matrix.getSubMatrix(row, row, beginCol, endCol);        // }        // return null;    }}